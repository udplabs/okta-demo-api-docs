terraform {
  backend "remote" {    
    organization = "ChrisGOrg"
    workspaces {
      name = "terraform-okta-demo-api"
    }
  }
}
variable "target_login_list" {
  type = list(string)
}
variable "org_name" {}
variable "api_token" {}
variable "base_url" {}
provider "okta" {
  org_name = var.org_name
  base_url = var.base_url
  api_token = var.api_token
  version   = "~> 3.0"
}
variable "scope_names" {
  description = "List of scopes to be created"
  default = {
    "system"                 = "okta.demo.api.system scope"
    "ecommerce"                 = "okta.demo.api.ecommerce scope"
    "financial"                 = "okta.demo.api.financial scope"
    "hospitality"                 = "okta.demo.api.hospitality scope"
  }
}

variable "group_names" {
  description = "List of groups to be created"
  default = {
    "okta.demo.api.system.manage.admin"              = "System Management Admin"
    "okta.demo.api.system.view.admin"                = "System View Admin"
    "okta.demo.api.ecommerce.manage.product"         = "E-Commerce Manage Product"
    "okta.demo.api.ecommerce.view.product"           = "E-Commerce View Product"
    "okta.demo.api.ecommerce.manage.facet"           = "E-Commerce Manage Facet"
    "okta.demo.api.ecommerce.view.facet"             = "E-Commerce View Facet"
    "okta.demo.api.ecommerce.manage.offer"           = "E-Commerce Manage Offer"
    "okta.demo.api.ecommerce.view.offer"             = "E-Commerce View Offer"
    "okta.demo.api.ecommerce.manage.category"        = "E-Commerce Manage Category"
    "okta.demo.api.ecommerce.view.category"          = "E-Commerce View Category"
    "okta.demo.api.ecommerce.manage.shipper"         = "E-Commerce Manage Shipper"
    "okta.demo.api.ecommerce.view.shipper"           = "E-Commerce View Shipper"
    "okta.demo.api.financial.manage.branch"          = "Financial Manage Branch"
    "okta.demo.api.financial.view.branch"            = "Financial View Branch"
    "okta.demo.api.financial.manage.member"          = "Financial Manage Member"
    "okta.demo.api.financial.view.member"            = "Financial View Member"
    "okta.demo.api.hospitality.manage.property"      = "Hospitality Manage Property"
    "okta.demo.api.hospitality.view.property"        = "Hospitality View Property"
    "okta.demo.api.hospitality.manage.rewardsmember" = "Hospitality Manage Rewardsmember"
    "okta.demo.api.hospitality.view.rewardsmember"   = "Hospitality View Rewardsmember"
    "okta.demo.api.hospitality.manage.brand"         = "Hospitality Manage Brand"
    "okta.demo.api.hospitality.view.brand"           = "Hospitality View Brand"
    "okta.demo.api.hospitality.manage.amenity"       = "Hospitality Manage Amenity"
    "okta.demo.api.hospitality.view.amenity"         = "Hospitality View Amenity"
    "okta.demo.api.hospitality.manage.hoteloffer"    = "Hospitality Manage Hoteloffer"
    "okta.demo.api.hospitality.view.hoteloffer"      = "Hospitality View Hoteloffer"
    "okta.demo.api.hospitality.manage.memberstay"    = "Hospitality Manage Memberstay"
    "okta.demo.api.hospitality.view.memberstay"      = "Hospitality View Memberstay"
  }
}
resource "okta_group" "gus_groups" {
  for_each = var.group_names
  name        = each.key
  description = "(Generated by UDP) ${each.value}"
 users = var.target_login_list
  
}
resource "okta_auth_server" "gus" {
  audiences   = ["api://apicatalog"]
  description = "okta.demo.api.authserver"
  name        = "Auth Server for Okta Demo API Catalog"
}

resource "okta_auth_server_scope" "gus_scopes" {
  for_each = var.scope_names
  name        = each.key
  description = "(Generated by UDP) ${each.value}"
  auth_server_id    = okta_auth_server.gus.id
}

resource "okta_auth_server_claim" "permission" {
  for_each = var.scope_names
  name              = "${each.key}.permission"
  status            = "ACTIVE"
  claim_type        = "RESOURCE"
  value             = "okta.demo.api.${each.key}."
  scopes            = [each.key]
  value_type        = "GROUPS"
  group_filter_type = "STARTS_WITH"
  auth_server_id    = okta_auth_server.gus.id
}

resource "okta_auth_server_policy" "main" {
  status           = "ACTIVE"
  name             = "Open Policy"
  description      = "No restriction (Generated by UDP)"
  priority         = 1
  client_whitelist = ["ALL_CLIENTS"]
  auth_server_id   = "${okta_auth_server.gus.id}"
}

resource "okta_auth_server_policy" "automatedPolicy" {
  status           = "ACTIVE"
  name             = "WorkflowPolicy"
  description      = "Policy used for workflows (Generated by UDP)"
  priority         = 1
  client_whitelist = ["ALL_CLIENTS"]
  auth_server_id   = "${okta_auth_server.gus.id}"
}

data "okta_group" "all" {
  name = "Everyone"
}
resource "okta_auth_server_policy_rule" "main" {
  auth_server_id       = "${okta_auth_server.gus.id}"
  policy_id            = "${okta_auth_server_policy.main.id}"
  status               = "ACTIVE"
  name                 = "Default"
  priority             = 1
  group_whitelist      = ["${data.okta_group.all.id}"]
  grant_type_whitelist = ["authorization_code"]
  scope_whitelist      = ["*"]
}
resource "okta_auth_server_policy_rule" "automatedPolicy" {
  auth_server_id       = "${okta_auth_server.gus.id}"
  policy_id            = "${okta_auth_server_policy.main.id}"
  status               = "ACTIVE"
  name                 = "automation rule"
  priority             = 1
  group_whitelist      = ["${data.okta_group.all.id}"]
  grant_type_whitelist = ["password"]
  scope_whitelist      = ["*"]
}
output "auth_server_id" {
  value = okta_auth_server.gus.id
}




