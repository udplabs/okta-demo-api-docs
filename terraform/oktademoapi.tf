variable "default_login" { default = "bob.behnken@gus.local" }
variable "sleep" { default = 20 }
variable "org_name" {}
variable "api_token" {}
variable "base_url" {}
variable "udp_subdomain" {}
variable "demo_app_name" {}
provider "okta" {
  org_name  = var.org_name
  base_url  = var.base_url
  api_token = var.api_token
  version   = "~> 3.0"
}
data "okta_group" "everyone" {
  name          = "Everyone"
}
resource "okta_user" "bob" {
  login             = "bob.behnken@gus.local"
  email             = "bob.behnken@gus.local"
  first_name        = "Bob"
  last_name         = "Behnken-udp"
}
data "okta_user" "default_login" {
  depends_on = [okta_user.bob]
  search {
    name  = "profile.login"
    value = var.default_login != "" ? var.default_login : "bob.behnken@gus.local"
  }
}
variable "scope_names" {
  description = "List of scopes to be created"
  default = {
    "system"      = "okta.demo.api.system scope"
    "ecommerce"   = "okta.demo.api.ecommerce scope"
    "financial"   = "okta.demo.api.financial scope"
    "hospitality" = "okta.demo.api.hospitality scope"
  }
}
variable "group_names" {
  description = "List of groups to be created"
  default = {
    "okta.demo.api.system.manage.admin"              = "System Management Admin"
    "okta.demo.api.system.view.admin"                = "System View Admin"
    "okta.demo.api.ecommerce.manage.product"         = "E-Commerce Manage Product"
    "okta.demo.api.ecommerce.view.product"           = "E-Commerce View Product"
    "okta.demo.api.ecommerce.manage.facet"           = "E-Commerce Manage Facet"
    "okta.demo.api.ecommerce.view.facet"             = "E-Commerce View Facet"
    "okta.demo.api.ecommerce.manage.offer"           = "E-Commerce Manage Offer"
    "okta.demo.api.ecommerce.view.offer"             = "E-Commerce View Offer"
    "okta.demo.api.ecommerce.manage.category"        = "E-Commerce Manage Category"
    "okta.demo.api.ecommerce.view.category"          = "E-Commerce View Category"
    "okta.demo.api.ecommerce.manage.shipper"         = "E-Commerce Manage Shipper"
    "okta.demo.api.ecommerce.view.shipper"           = "E-Commerce View Shipper"
    "okta.demo.api.financial.manage.branch"          = "Financial Manage Branch"
    "okta.demo.api.financial.view.branch"            = "Financial View Branch"
    "okta.demo.api.financial.manage.member"          = "Financial Manage Member"
    "okta.demo.api.financial.view.member"            = "Financial View Member"
    "okta.demo.api.hospitality.manage.property"      = "Hospitality Manage Property"
    "okta.demo.api.hospitality.view.property"        = "Hospitality View Property"
    "okta.demo.api.hospitality.manage.rewardsmember" = "Hospitality Manage Rewardsmember"
    "okta.demo.api.hospitality.view.rewardsmember"   = "Hospitality View Rewardsmember"
    "okta.demo.api.hospitality.manage.brand"         = "Hospitality Manage Brand"
    "okta.demo.api.hospitality.view.brand"           = "Hospitality View Brand"
    "okta.demo.api.hospitality.manage.amenity"       = "Hospitality Manage Amenity"
    "okta.demo.api.hospitality.view.amenity"         = "Hospitality View Amenity"
    "okta.demo.api.hospitality.manage.hoteloffer"    = "Hospitality Manage Hoteloffer"
    "okta.demo.api.hospitality.view.hoteloffer"      = "Hospitality View Hoteloffer"
    "okta.demo.api.hospitality.manage.memberstay"    = "Hospitality Manage Memberstay"
    "okta.demo.api.hospitality.view.memberstay"      = "Hospitality View Memberstay"
  }
}
resource "okta_group" "gus_groups" {
  depends_on = [okta_user.bob, data.okta_user.default_login]
  for_each = var.group_names
  name        = each.key
  description = "(Generated by UDP) ${each.value}"
  users       = [var.default_login != "" ? data.okta_user.default_login.id : okta_user.bob.id]
}
resource "okta_app_oauth" "demoApp" {
  label          = "okta-demo-api (Generated by UDP)"
  type           = "web"
  grant_types    = ["authorization_code", "implicit", "refresh_token"]
  redirect_uris  = ["https://localhost:5001/signin-oidc"]
  response_types = ["code", "token", "id_token"]
  groups         = ["${data.okta_group.everyone.id}"]
  consent_method = "TRUSTED"
}
resource "okta_app_oauth" "demoSpa" {
  label          = "okta-demo-api-docs-spa (Generated by UDP)"
  type           = "browser"
  grant_types    = ["implicit"]
  redirect_uris  = ["https://${var.udp_subdomain}.services-docs.unidemo.info/guide/reset.html"]
  response_types = ["token", "id_token"]
  groups         = ["${data.okta_group.everyone.id}"]
  consent_method = "TRUSTED"
}
resource "okta_trusted_origin" "dealer_https" {
  name   = "${var.udp_subdomain} ${var.demo_app_name} HTTPS"
  origin = "https://${var.udp_subdomain}.services-docs.unidemo.info"
  scopes = ["REDIRECT", "CORS"]
}
resource "okta_auth_server" "gus" {
  audiences   = ["api://apicatalog"]
  description = "okta.demo.api.authserver"
  name        = "okta-demo-api (Generated by UDP)"
}
resource "okta_auth_server_scope" "gus_scopes" {
  for_each = var.scope_names
  auth_server_id    = okta_auth_server.gus.id
  name              = each.key
  description       = "(Generated by UDP) ${each.value}"
}
resource "okta_auth_server_claim" "permission" {
  depends_on        = [okta_auth_server_scope.gus_scopes]
  for_each          = var.scope_names
  auth_server_id    = okta_auth_server.gus.id
  name              = "${each.key}.permission"
  status            = "ACTIVE"
  claim_type        = "RESOURCE"
  value             = "okta.demo.api.${each.key}."
  scopes            = [each.key]
  value_type        = "GROUPS"
  group_filter_type = "STARTS_WITH"
}
resource "okta_auth_server_policy" "docs_spa_policy" {
  depends_on       = [okta_auth_server_scope.gus_scopes]
  auth_server_id   = okta_auth_server.gus.id
  status           = "ACTIVE"
  name             = "docs-spa Policy"
  description      = "(Generated by UDP)"
  priority         = 1
  client_whitelist = [okta_app_oauth.demoSpa.id]
}
resource "okta_auth_server_policy_rule" "docs_spa_policy" {
  depends_on           = [okta_auth_server_policy.docs_spa_policy]
  auth_server_id       = okta_auth_server.gus.id
  policy_id            = okta_auth_server_policy.docs_spa_policy.id
  status               = "ACTIVE"
  name                 = "Default"
  priority             = 1
  group_whitelist      = ["EVERYONE"]
  grant_type_whitelist = ["authorization_code","implicit"]
  scope_whitelist      = ["*"]
}
resource "okta_auth_server_policy" "open_policy" {
  depends_on       = [okta_auth_server_scope.gus_scopes]
  auth_server_id   = okta_auth_server.gus.id
  status           = "ACTIVE"
  name             = "Open Policy"
  description      = "No restriction (Generated by UDP)"
  priority         = 2
  client_whitelist = ["ALL_CLIENTS"]
}
resource "okta_auth_server_policy_rule" "open_policy" {
  depends_on           = [okta_auth_server_policy.open_policy]
  auth_server_id       = okta_auth_server.gus.id
  policy_id            = okta_auth_server_policy.open_policy.id
  status               = "ACTIVE"
  name                 = "Default"
  priority             = 1
  group_whitelist      = ["EVERYONE"]
  grant_type_whitelist = ["authorization_code"]
  scope_whitelist      = ["*"]
}
resource "okta_auth_server_policy" "workflows_policy" {
  depends_on       = [okta_auth_server_policy.open_policy, okta_auth_server_scope.gus_scopes]
  auth_server_id   = okta_auth_server.gus.id
  status           = "ACTIVE"
  name             = "WorkflowPolicy"
  description      = "Policy used for workflows (Generated by UDP)"
  priority         = 3
  client_whitelist = ["ALL_CLIENTS"]
}
resource "okta_auth_server_policy_rule" "workflows_policy" {
  depends_on           = [okta_auth_server_policy.workflows_policy]
  auth_server_id       = okta_auth_server.gus.id
  policy_id            = okta_auth_server_policy.workflows_policy.id
  status               = "ACTIVE"
  name                 = "automation rule"
  priority             = 1
  group_whitelist      = ["EVERYONE"]
  grant_type_whitelist = ["password"]
  scope_whitelist      = ["*"]
}
output "auth_server_id" {
  value = okta_auth_server.gus.id
}
output "spa_client_id" {
  value = "${okta_app_oauth.demoSpa.client_id}"
}
output "demo_client_id" {
  value = "${okta_app_oauth.demoApp.client_id}"
}
output "demo_client_secret" {
  value = "${okta_app_oauth.demoApp.client_secret}"
}